{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GiftGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURIComponent","fetch","resp","json","data","gifts","map","elt","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","image","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAAEC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC9CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,mBAAmBH,GADvD,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAQD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAe,SAAC,GAAwB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEvC,OACI,sBAAKc,UAAU,2DAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCHJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECHwB,SAAEA,GAC1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAU,WAENxB,EAAQC,GACPwB,MAAM,SAAAX,GAEHS,EAAS,CACLf,KAAMM,EACNO,SAAS,SAKlB,CAACpB,IAEGqB,EDjB2BI,CAAczB,GAAlCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACI,qCACI,oBAAIJ,UAAU,sDAAd,SAAsEhB,IAEpEoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAEiB,GAAF,OACR,cAAC,EAAD,eAAoCA,GAAhBA,EAAMf,aEbrCgB,EAAe,WAExB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQS,EAAWe,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCXlC4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.5ef46e44.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = ( e ) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = ( e ) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2) {\n            setCategories( categories => [ inputValue, ...categories ]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async ( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURIComponent(category)}&limit=10&api_key=LeJBCovdVC9KWcplL3hY9q8VmpVeIv9m`;\n    const resp = await fetch( url )\n    const { data } = await resp.json();\n\n    const gifts = data.map( elt => {\n        return {\n            id: elt.id,\n            title: elt.title,\n            url: elt.images?.downsized_medium.url,\n        }\n    })\n    \n    return gifts;\n}","import React from 'react'\n\nexport const GiftGridItem = ( { id, title, url }) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn animate__delay-2s\">\n            <img src={ url } alt={ title } />\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GiftGridItem } from './GiftGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data: images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn animate__delay-1s\">{ category }</h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n\n            <div className=\"card-grid\">\n                {\n                    images.map( ( image ) => (\n                        <GiftGridItem key={ image.id } { ...image }/>\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    })\n\n    useEffect(() => {\n\n        getGifs(category)\n        .then( images => {\n\n            setState({\n                data: images,\n                loading: false,\n            });\n\n        })\n\n    }, [category])\n\n    return state; // [ data: [], loading: true ]\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n    return (\n        <div>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr></hr>\n\n            <ol>\n                {\n                    categories.map( category => ( \n                        <GifGrid \n                            key={ category }\n                            category={ category }\n                        />\n                    ))\n                }\n            </ol>\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}